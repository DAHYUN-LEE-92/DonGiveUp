<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="funding">
	<select id="selectList" parameterType="map" resultType="funding">
		select 
			funding_no as fundingNo,funding_title as fundingTitle,
			funding_content as fundingContent, funding_group as fundingGroup,
			funding_group_introduce as fundingGroupIntroduce,
			funding_class as fundingClass, funding_type as fundingType,
			funding_start_date as fundingStartDate, funding_end_date as fundingEndDate,
			funding_manager as fundingManager, funding_goal_price as fundingGoalPRice,
			funding_now_price as fundingNowPrice, funding_negative as fundingNegative,
			(select 
	            funding_filepath 
		        from fundingimg s 
		        where s.funding_no = f.funding_no and 
		        funding_img_no= (
		            select min(funding_img_no) 
		            from fundingimg u
		            where s.funding_no = u.funding_no)
	        ) as fundingFilepath,
	        (SELECT ROUND ((FUNDING_NOW_PRICE/FUNDING_GOAL_PRICE) * 100 ) FROM FUNDING a WHERE a.funding_no = f.funding_no) as fundingPercent,
	        (select floor(to_date(funding_end_date) - sysdate) from funding b where b.funding_no = f.funding_no) as dateLeft
			from (select rownum, m.* from(select * from funding where funding_type = 1 
			<if test="type != null">
				and
				funding_class =#{type}
				<!-- <if test="type.equals('0')">
					 funding_class = 0 
				</if>
				<if test="type.equals('1')">
					funding_class = 1 
				</if>
				<if test="type.equals('2')">
					funding_class = 2 
				</if> -->
			</if>
			
				order by funding_no desc 
				)m
			)f
			where rownum between  #{rnumMin} and #{rnumMax}

	</select>	
	<select id="totalCount" parameterType="map" resultType="_int">
		select count(*)
			from funding
		<if test="type != null">
			where 
				funding_class = #{type }
		</if>
	</select>
	<select id="fundingView" parameterType="_int" resultType="funding">
		select
			
			funding_no as fundingNo,funding_title as fundingTitle,
			funding_content as fundingContent, funding_group as fundingGroup,
			funding_group_introduce as fundingGroupIntroduce,
			funding_class as fundingClass, funding_type as fundingType,
			funding_start_date as fundingStartDate, funding_end_date as fundingEndDate,
			funding_manager as fundingManager, funding_goal_price as fundingGoalPRice,
			funding_now_price as fundingNowPrice, funding_negative as fundingNegative,
			(select floor(to_date(funding_end_date) - sysdate) from funding b where b.funding_no = f.funding_no) as dateLeft
			from funding f
			where funding_no = #{fundingNo}
			
	</select>
	<select id="fundingInList" parameterType="_int" resultType="fundingIn">
		select 
			funding_in_no as fundingInNo,funding_in_memberid as fundingInMemberId,
			funding_in_count as fundingInCount,rewardlist_no as rewardListNo,
			funding_in_price as fundingInPrice,  funding_no as fundingNo,
			funding_in_date as fundingPayNo
			
			from fundingIn 
			where funding_no = #{fundingNo}
	
	</select>	
	<select id="scheduledList" resultType="funding">
		select 
			funding_no as fundingNo,funding_title as fundingTitle,
			funding_content as fundingContent, funding_group as fundingGroup,
			funding_group_introduce as fundingGroupIntroduce,
			funding_class as fundingClass, funding_type as fundingType,
			funding_start_date as fundingStartDate, funding_end_date as fundingEndDate,
			funding_manager as fundingManager, funding_goal_price as fundingGoalPRice,
			funding_now_price as fundingNowPrice, funding_negative as fundingNegative,
			
			from funding where funding_End_Date > sysdate and funding_Type = 1
	</select>	
	<select id="updateType" parameterType="_int">
		update funding set funding_type=4 where funding_no = #{fundingNo}
	</select>
	
	<select id="refundList" parameterType="_int" resultType="fundingIn">
		select 
			funding_in_no as fundingInNo, funding_in_memberid as fundingInMemberId,
			funding_in_count as fundingInCount, rewardlist_no as rewardListNo,
			funding_in_price as fundingInPrice, funding_no as fundingNo,
			funding_in_date as fundingInDate
			
			from funding_in where funding_no = #{fundingNo}
			
	</select>
	<select id="refund" parameterType="FundingIn">
		update member set member_money = member_money+#{fundingInCount} where member_id = #{fundingInMemberId}
		
	</select>
	<insert id="insert" parameterType="funding">
		insert into funding values(
		1,#{fundingTitle},#{fundingContent},#{fundingGroup},#{fundingGroupIntroduce},#{fundingClass},0,sysdate,sysdate,#{fundingManager},#{fundingGoalPrice},0,null
		)
	</insert>
	
</mapper>
