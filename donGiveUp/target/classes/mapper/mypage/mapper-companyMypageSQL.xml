<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="companyMypage">
	<select id="selectCompanyReqListTotalCount" parameterType="map" resultType="_int">
		<if test='type.equals("donation")'>
			select count(*) from donation where donation_writer=#{memberId}
		</if>
		<if test='type.equals("funding")'>
			select count(*) from funding where funding_manager=#{memberId}
		</if>
		<if test='type.equals("vwork")'>
			select count(*) from vwork where vwork_writer=#{memberId}
		</if>
		<if test='type.equals("support")'>
			select count(*) from support where support_id=#{memberId}
		</if>
		<if test='type.equals("regular")'>
			select count(*) from regular where regular_id=#{memberId}
		</if>
	</select>
	
	<select id="selectCompanyReqList" parameterType="map" resultType="companyReqBoard">
		<if test='type.equals("donation")'>
		select * from 
			(select ROWNUM as rnum, r.* from
				(select donation_no as boardNo, donation_title as boardTitle, donation_state as boardState, donation_negative as negativeContent
				from donation where donation_writer=#{memberId})
			r)
		where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("funding")'>
		select * from
			(select ROWNUM as rnum, r.* from
				(select funding_no as boardNo, funding_title as boardTitle, funding_type as boardState, funding_negative as negativeContent
				from funding where funding_manager=#{memberId})
			r)
		where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("vwork")'>
		select * from
			(select ROWNUM as rnum, r.* from
				(select vwork_no as boardNo, vwork_title as boardTitle, vwork_state as boardState, vwork_negative as negativeContent
				from vwork where vwork_writer=#{memberId})
			r)
		where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("support")'>
		select * from 
		    (select ROWNUM as rnum, r.* from
		        (select support_no as boardNo, support_name as boardTitle, support_apply_state as boardState, enroll_end_date as boardEndDate
		        from supportapply left join support using(support_no) where support_apply_id=#{memberId})
		    r)
		where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("regular")'>
		select * from
			(select ROWNUM as rnum, r.* from
				(select regular_no as boardNo, regular_title as boardTitle, regular_state as boardState, regular_negative as negativeContent
				from regular where regular_id=#{memberId})
			r)
		where rnum between #{start} and #{end}
		</if>
	</select>
	
	<select id="selectCompanyBoardListTotalCount" parameterType="map" resultType="_int">
		<if test='type.equals("donation")'>
			select count(*) from donation where donation_writer=#{memberId} and donation_state=1
		</if>
		<if test='type.equals("funding")'>
			select count(*) from funding where funding_manager=#{memberId} and funding_type=1
		</if>
		<if test='type.equals("vwork")'>
			select count(*) from vwork where vwork_writer=#{memberId} and vwork_state=1
		</if>
	</select>
	
	<select id="selectCompanyBoardList" parameterType="map" resultType="companyReqBoard">
		<if test='type.equals("donation")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select donation_no as boardNo, donation_title as boardTitle, donation_start_date as boardStartDate, donation_end_date as boardEndDate
				from donation where donation_writer=#{memberId} and donation_state=1)
			r) where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("funding")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select funding_no as boardNo, funding_title as boardTitle, funding_start_date as boardStartDate, funding_end_date as boardEndDate
				from funding where funding_manager=#{memberId} and funding_type=1)
			r) where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("vwork")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select vwork_no as boardNo, vwork_title as boardTitle, vwork_req_date as boardStartDate
				from vwork where vwork_writer=#{memberId} and vwork_state=1)
			r) where rnum between #{start} and #{end}
		</if>
	</select>
	
	<select id="boardAttendUserListTotalCount" parameterType="map" resultType="_int">
		<if test='type.equals("donation")'>
			select count(*) from donation_in where donation_no=#{boardNo}
		</if>
		<if test='type.equals("funding")'>
			select count(*) from funding_in where funding_no=#{boardNo}
		</if>
		<if test='type.equals("vwork")'>
			select count(*) from vserver where vserver_ref=#{boardNo}
		</if>
	</select>
	
	<select id="boardAttendUserList" parameterType="map" resultType="attenUser">
		<if test='type.equals("donation")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select member_phone as memberPhone, member_name as memberName, donation_in_memberid as attendId, donation_in_date as attendDate, donation_in_money as attendMoney
					from donation_in left join member on(donation_in_memberid=member_id) where donation_no=#{boardNo} order by donation_in_date desc)
				r)
			where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("funding")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select member_phone as memberPhone, member_name as memberName, F.funding_in_memberid as attendId,  R.reward_name as rewardName, F.funding_in_date as attendDate, F.funding_in_price as fundingInPrice,
					F.funding_in_count as rewardCount, R.reward_price as rewardOnePrice
					from funding_in F left join member on(funding_in_memberid=member_id), rewardlist R  where F.rewardlist_no=R.rewardlist_no and F.funding_no=#{boardNo} order by funding_in_date desc)
				r)
			where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("vwork")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select member_phone as memberPhone, member_name as memberName, vserver_writer as attendId, vserver_day as attendDate, vserver_per as attendUserCount from vserver
					left join member on(vserver_writer=member_id)
					where vserver_ref=#{boardNo} order by vserver_day desc)
				r) 
			where rnum between #{start} and #{end}
		</if>
	</select>
	
	<select id="selectNowMoney" parameterType="string" resultType="_int">
		select sum(regular_in_money) from regular_in where regular_id=#{_parameter}
	</select>
	<select id="selectMonthMoney" parameterType="string" resultType="_int">
		select sum(regular_in_money) from regular_in where regular_id=#{_parameter}
		and regular_in_pay_num between (select TRUNC(sysdate, 'MM') from dual) and sysdate
	</select>
	
	<select id="selectCompanyRegularBoardTotalCount" parameterType="map" resultType="_int">
		<if test='type.equals("0")'>
			select count(*) from regular_in where regular_in_cancel in(0,1) and regular_id=#{memberId}
		</if>
		<if test='type.equals("1")'>
			select count(*) from regular_in where regular_in_cancel=2 and regular_id=#{memberId}
		</if>
	</select>
	
	<select id="selectCompanyRegularBoard" parameterType="map" resultType="regularUser">
	select * from
		(select ROWNUM as rnum, r.* from
			(select regular_in_id as regularId, regular_in_money as regularMoney, regular_in_date as regularInDate, regular_in_end_date as regularEndDate,
			regular_in_pay_num as regularAutoDate from regular_in where
		<if test='type.equals("0")'>
			regular_in_cancel in(0,1)
		</if>
		<if test='type.equals("1")'>
			regular_in_cancel=2
		</if>
			and regular_id=#{memberId})
		r)
	where rnum between #{start} and #{end}
	</select>
</mapper>
