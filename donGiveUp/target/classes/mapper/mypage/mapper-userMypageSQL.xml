<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="userMypage">
	<select id="moneyUserListTotalCount" parameterType="string" resultType="_int">
		select count(*) from money_use_list where member_id=#{_parameter}
	</select>
	<select id="moneyUserList" parameterType="map" resultType="userMoneyUseList">
		select * from
		    (select ROWNUM as rnum, r.* from
		        (select money_no as moneyNo, money_history as moneyHistory,
		        money_stock as moneyStock, money_use_date as moneyUseDate, member_id as memberId from money_use_list where member_id=#{memberId}
		        order by money_use_date desc)
		    r) where rnum between #{start} and #{end} 
	</select>
	<select id="allUseMoney" parameterType="string" resultType="_int">
		select SUM(money_history) from money_use_list where money_stock='출금' and member_id=#{_parameter} 
	</select>
	<select id="nowMoney" parameterType="string" resultType="_int">
		select member_money from member where member_id=#{_parameter}
	</select>
	<select id="dontoriPay" parameterType="map" statementType="CALLABLE">
		{call pro_dontoriPay(
			#{memberId},
			#{amount}
		)
		}
	</select>
	<update id="userInfoModify" parameterType="member">
		update member set member_name=#{memberName}, member_phone=#{memberPhone}, member_email=#{memberEmail} where member_id=#{memberId}
	</update>
	
	<select id="donationCount" parameterType="string" resultType="_int">
		select count(*) from donation_in where donation_in_memberid=#{_parameter}
	</select>
	<select id="fundingCount" parameterType="string" resultType="_int">
		select count(*) from funding_in where funding_in_memberId=#{_parameter}
	</select>
	<select id="supportCount" parameterType="string" resultType="_int">
		select count(*) from support where support_id=#{_parameter} and support_state=1
	</select>
	<select id="vworkCount" parameterType="string" resultType="_int">
		select count(*) from vserver where vserver_writer=#{_parameter} and vserver_day>=sysdate
	</select>
	<select id="regularCount" parameterType="string" resultType="_int">
		select count(*) from regular_in where regular_in_id=#{_parameter}
	</select>
	
	
	<select id="attendListTotalCount" parameterType="map" resultType="_int">
		<if test='type.equals("donation")'>
			<if test='radio.equals("0")'>
				<![CDATA[
				select count(donation_end_date) from donation_in left join donation using(donation_no)
				where donation_in_memberid=#{memberId} and donation_end_date >= sysdate
				]]>
				
			</if>
			<if test='radio.equals("1")'>
				<![CDATA[
				select count(donation_end_date) from donation_in left join donation using(donation_no)
				where donation_in_memberid=#{memberId} and donation_end_date < sysdate
				]]>
			</if>
		</if>
		<if test='type.equals("funding")'>
			<if test='radio.equals("0")'>
				<![CDATA[
				select count(funding_end_date) from funding_in left join funding using(funding_no) 
				where funding_in_memberId=#{memberId} and funding_end_date >= sysdate
				]]>
			</if>
			<if test='radio.equals("1")'>
				<![CDATA[
				select count(funding_end_date) from funding_in left join funding using(funding_no) 
				where funding_in_memberId=#{memberId} and funding_end_date < sysdate
				]]>
			</if>
		</if>
		<if test='type.equals("vwork")'>
			<if test='radio.equals("0")'>
				<![CDATA[
				select count(*) from vserver where vserver_writer=#{memberId} and vserver_day<sysdate
				]]>
			</if>
			<if test='radio.equals("1")'>
				<![CDATA[
				select count(*) from vserver where vserver_writer=#{memberId} and vserver_day>=sysdate
				]]>
			</if>
		</if>
		<if test='type.equals("support")'>
			<if test='radio.equals("0")'>
				select count(*) from support where support_state=0 and support_id=#{memberId}
			</if>
			<if test='radio.equals("1")'>
				select count(*) from support where support_state!=0 and support_id=#{memberId}
			</if>
		</if>
		<if test='type.equals("regular")'>
			<if test='radio.equals("0")'>
				select count(*) from regular_in where regular_in_id=#{memberId} and regular_in_cancel=0
			</if>
			<if test='radio.equals("1")'>
				select count(*) from regular_in where regular_in_id=#{memberId} and regular_in_cancel!=0
			</if>
		</if>
	</select>
	
	<select id="attendList" parameterType="map" resultType="userAttendList">
		<if test='type.equals("donation")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select donation_in_no as boardNo, donation_in_memberid as boardWriter, donation_title as boardTitle, donation_no as boardRef,
					donation_in_money as boardMoney, donation_in_date as boardDate from donation_in left join donation using(donation_no) where donation_in_memberid=#{memberId}
					<if test='radio.equals("0")'>
					<![CDATA[
					and donation.donation_end_date>=sysdate)
					]]>
					</if>
					<if test='radio.equals("1")'>
					<![CDATA[
					and donation.donation_end_date<sysdate)
					]]>
					</if>
				r)
			where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("funding")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select funding_in_no as boardNo, funding_in_memberId as boardWriter, funding_title as boardTitle, funding_in_price as fundingCashMoney, funding_in_date as boardDate,
					funding_in_count as boardCount, funding_in_money as boardMoney, reward_price as rewardOnePrice, reward_name as boardRewardName
					from funding_in left join funding using(funding_no) left join rewardlist using(rewardlist_no) where funding_in_memberId=#{memberId}
					<if test='radio.equals("0")'>
					<![CDATA[
					and funding.funding_end_date>=sysdate)
					]]>
					</if>
					<if test='radio.equals("1")'>
					<![CDATA[
					and funding.funding_end_date<sysdate)
					]]>
					</if>
				r)
			where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("regular")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select regular_in_no as boardNo, regular_in_id as boardWriter, company_name as boardTitle, regular_in_money as boardMoney,
					regular_in_date as boardDate, regular_in_end_date as regularEndDate from regular_in left join member on(regular_id=member_id) where regular_in_id=#{memberId}
					<if test='radio.equals("0")'> 
					and	regular_in_cancel=0)
					</if>
					<if test='radio.equals("1")'>
					and	regular_in_cancel!=0) 
					</if>
				r)
			where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("vwork")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select vserver_no as boardNo, vserver_writer as boardWriter, vwork_title as boardTitle, vwork_address as boardPlace, vwork_no as boardRef,
					vserver_day as boardDate from vserver left join vwork on(vserver_ref=vwork_no) where vserver_writer=#{memberId}
					<if test='radio.equals("0")'>
					<![CDATA[
					and vserver_day<=sysdate)
					]]>
					</if>
					<if test='radio.equals("1")'>
					<![CDATA[
					and vserver_day>sysdate)
					]]>
					</if>
				r)
			where rnum between #{start} and #{end}
		</if>
		<if test='type.equals("support")'>
			select * from
				(select ROWNUM as rnum, r.* from
					(select support_no as boardNo, support_name as boardTitle, support_id as boardWriter, support_amount as boardCount, support_category as supportKind, enroll_end_date as boardDate,
					support_state as boardState from support where support_id=#{memberId}
					<if test='radio.equals("0")'>
					and support_state=0)
					</if>
					<if test='radio.equals("1")'>
					and support_state!=0)
					</if>
				r)
			where rnum between #{start} and #{end}
		</if>
	</select>
	<update id="regularCancelRequest" parameterType="_int">
		update regular_in set regular_in_cancel=1 where regular_in_no=#{_parameter}
	</update>
	<select id="selectNegativeContentUser" parameterType="map" resultType="string">
		<if test='type.equals("support")'>
			select support_negative from support where support_no=#{boardNo}
		</if>
	</select>
	
	<select id="selectCompanyReqContent" parameterType="map" resultType="string">
		<if test='type.equals("company")'>
			select support_apply_reason from supportapply where support_no=#{boardNo} and support_apply_state=1
		</if> 
	</select>
</mapper>
