<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="regular">
	
	
	<select id="regularList" parameterType="string" resultType="member">
	select
	 MEMBER_ID AS memberId,
			COMPANY_FILENAME AS companyFilename,
			COMPANY_FILEPATH AS companyFilepath,
			CHART_FILENAME AS chartFilename,
			CHART_FILENAME AS chartFilepath,
			COMPANY_NAME AS companyName
	 from member left join regular on regular_id = member_id where regular_state = 1 and regular_type like '%'||#{_parameter}||'%' 

	</select>
	<insert id="regularInsert" parameterType="regular">
		insert into regular values(regular_seq.nextval, #{regularWriter},#{regularTitle}, #{regularContent}, #{regularType},0 ,sysdate,0,null)
	</insert>
	
	<select id="regularDetail" parameterType="String" resultType="regular">
		SELECT 
			REGULAR_NO AS regularNo,
			REGULAR_ID AS regularId,
    				REGULAR_TITLE AS regularTitle,
    				REGULAR_CONTENT AS regularContent,
    				REGULAR_TYPE AS regularType,
  					REGULAR_NOW_MONEY AS regularNowMoney,	
					REGULAR_START_DATE AS regularStartDate,
   					REGULAR_STATE AS regularState,
  					REGULAR_NEGATIVE AS regularNegative    
		        FROM REGULAR
		where regular_id = #{_parameter}
	</select>
	
	<select id="regularInCount" parameterType="String" resultType="regularIn">
		SELECT 
			REGULAR_IN_NO AS regularInNo,
			REGULAR_IN_ID AS regularInId,
			REGULAR_IN_CANCEL AS regularInCancel,
    		REGULAR_ID AS regularId		
		        FROM REGULAR_IN
		where regular_id = #{_parameter} and REGULAR_IN_CANCEL = 0
	</select>
	
	
	<select id="regularMember" parameterType="string" resultType="member">
		SELECT 
			MEMBER_ID AS memberId,
			COMPANY_FILENAME AS companyFilename,
			COMPANY_FILEPATH AS companyFilepath,
			CHART_FILENAME AS chartFilename,
			CHART_FILENAME AS chartFilepath,
			COMPANY_NAME AS companyName
		        FROM MEMBER
		where member_id = #{_parameter}
	</select>
	
	<insert id="regularInInsert" parameterType="regularIn">
		insert into regular_in values(regular_in_seq.nextval, #{regularInId}, #{regularInMoney},sysdate ,null,#{regularInPayNum},0,#{regularId})
	</insert>
	
	<update id="memberMoneyUpdate" parameterType="member">
		update member 
		set 
			member_money = #{memberMoney}
		where member_id = #{memberId}
	</update>
	
	
	<update id="memberInUpdate" parameterType="String">
	update member m set 
	member_money = member_money-(select regular_in_money from regular_in r where m.member_id=r.regular_in_id) 
	where member_id in 
	(select regular_in_id from regular_in join member on(regular_in_id = member_id) where regular_in_pay_num=#{_parameter} and regular_in_cancel = 0)
	</update>
	
	
	<update id="regularInUpdate" parameterType="String">
	update member m set 
	member_money = member_money-(select regular_in_money from regular_in r where m.member_id=r.regular_in_id) 
	where member_id in 
	(select regular_in_id from regular_in join member on(regular_in_id = member_id) where regular_in_pay_num=#{_parameter} and regular_in_cancel = 0)
	</update>
	
	<update id="bankInUpdate" parameterType="String">
	update bank m set 
bank_now_money = bank_now_money+(select bank_in_money from bank_in r where m.bank_no=r.bank_no and bank_in_type= 1)
where bank_no in 
(select bank_no from bank_in join bank using(bank_no) where bank_in_pay_num=#{_parameter} and bank_in_type= 1);
	</update>
	
	<update id="bankMemInUpdate" parameterType="String">
	update member m set 
	member_money = member_money-(select bank_in_money from bank_in r where m.member_id=r.bank_in_id and bank_in_type= 1) 
	where member_id in
	(select bank_in_id from bank_in join member on(bank_in_id = member_id) where bank_in_pay_num = #{_parameter} and bank_in_type= 1);
	</update>
	
	

	
	<select id="memberMoney" parameterType="string" resultType="member">
		SELECT 
			MEMBER_ID AS memberId,
			MEMBER_MONEY AS memberMoney
		        FROM MEMBER
		where member_id = #{_parameter}
	</select> 
	<select id="memberIdSearch" parameterType="string" resultType="member">
		SELECT 
			MEMBER_ID AS memberId,
			MEMBER_MONEY AS memberMoney,
			COMPANY_NAME AS companyName
		        FROM MEMBER
		where company_name= #{_parameter}
	</select> 
</mapper>
